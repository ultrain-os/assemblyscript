#!/usr/bin/env node

/* tslint:disable */

const tailArgs = process.argv.indexOf("--");
if (~tailArgs) {
  require("child_process").spawnSync(
    process.argv[0],
    process.argv.slice(tailArgs + 1).concat(
      process.argv.slice(1, tailArgs)
    ),
    { stdio: "inherit" }
  );
  return;
}

require("source-map-support").install();
const usc = module.exports = require("../cli/asc.js");
const optionsUtil = require("../cli/util/options");
const options = exports.options = require("../cli/asc.json");

if (/\busc|asc$/.test(process.argv[1])) {
  const argv = process.argv.slice(2);
  const opts = optionsUtil.parse(argv, options);
  const args = opts.options;

  // There are two steps to generate the wast file
  if(args.applyText){
  	process.exitCode = usc.main(argv, null, null, 1);
  	process.exitCode = usc.main(argv, null, null, 3);
  } else {
    process.exitCode = usc.main(argv, null, null, 1);
    process.exitCode = usc.main(argv, null, null, 2);
  }
  return process.exitCode;
}
